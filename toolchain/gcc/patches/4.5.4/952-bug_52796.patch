[C++11] Initialization of primitive object with 0-length parameter pack fails to value-initialize

 http://gcc.gnu.org/bugzilla/show_bug.cgi?id=52796

--- gcc-4_6-branch/gcc/testsuite/ChangeLog	(revision 186119)
+++ gcc-4_6-branch/gcc/testsuite/ChangeLog	(revision 186120)
@@ -1,6 +1,11 @@
 	PR target/53138
 	* gcc.c-torture/execute/20120427-1.c: New testcase.
 
+2012-04-03  Jason Merrill  <jason@redhat.com>
+
+	PR c++/52796
+	* g++.dg/cpp0x/variadic-value1.C: New.
+
 2012-03-28  Martin Jambor  <mjambor@suse.cz>
 
 	Backported from mainline
--- gcc-4_6-branch/gcc/testsuite/g++.dg/cpp0x/variadic-value1.C	(revision 0)
+++ gcc-4_6-branch/gcc/testsuite/g++.dg/cpp0x/variadic-value1.C	(revision 186120)
@@ -0,0 +1,24 @@
+// PR c++/52796
+// { dg-do run { target c++11 } }
+
+inline void *operator new(__SIZE_TYPE__ s, void *p) { return p; }
+
+struct A
+{
+  int i;
+  template<class... Ts>
+  A(Ts&&... ts): i(ts...) { }
+};
+
+static union {
+  unsigned char c[sizeof(A)];
+  int i;
+};
+
+int main()
+{
+  i = 0xdeadbeef;
+  new(c) A;
+  if (i != 0)
+    __builtin_abort();
+}
--- gcc-4_6-branch/gcc/cp/ChangeLog	(revision 186119)
+++ gcc-4_6-branch/gcc/cp/ChangeLog	(revision 186120)
@@ -1,6 +1,12 @@
 
 	* GCC 4.5.4 released.
 
+2012-04-03  Jason Merrill  <jason@redhat.com>
+
+	PR c++/52796
+	* pt.c (tsubst_initializer_list): A pack expansion with no elements
+	means value-initialization.
+
 2012-01-19  Kai Tietz  <ktietz@redhat.com>
 
 	PR c++/51344
--- gcc-4_6-branch/gcc/cp/pt.c	(revision 186119)
+++ gcc-4_6-branch/gcc/cp/pt.c	(revision 186120)
@@ -17160,6 +17160,7 @@ tsubst_initializer_list (tree t, tree ar
             }
           else
             {
+	      tree tmp;
               decl = tsubst_copy (TREE_PURPOSE (t), argvec, 
                                   tf_warning_or_error, NULL_TREE);
 
@@ -17167,9 +17168,18 @@ tsubst_initializer_list (tree t, tree ar
               if (decl && !DECL_P (decl))
                 in_base_initializer = 1;
 
-              init = tsubst_expr (TREE_VALUE (t), argvec, 
+	      init = TREE_VALUE (t);
+	      tmp = init;
+	      if (init != void_type_node)
+              init = tsubst_expr (init, argvec,
 				  tf_warning_or_error, NULL_TREE,
                                   /*integral_constant_expression_p=*/false);
+	      if (init == NULL_TREE && tmp != NULL_TREE)
+		/* If we had an initializer but it instantiated to nothing,
+		   value-initialize the object.  This will only occur when
+		   the initializer was a pack expansion where the parameter
+		   packs used in that expansion were of length zero.  */
+		init = void_type_node;
               in_base_initializer = 0;
             }
 
