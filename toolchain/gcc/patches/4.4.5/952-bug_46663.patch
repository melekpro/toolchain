ICE: SIGSEGV in vect_recog_pow_pattern (gimple.h:2055) with -O -fexceptions -ftree-vectorize

http://gcc.gnu.org/bugzilla/show_bug.cgi?id=46663

--- gcc-4_4-branch/gcc/ChangeLog	2010/12/05 10:09:25	167471
+++ gcc-4_4-branch/gcc/ChangeLog	2010/12/05 11:31:09	167472
@@ -1,3 +1,10 @@
+2010-12-05  Richard Guenther  <rguenther@suse.de>
+	    Ira Rosen  <irar@il.ibm.com>
+
+	PR tree-optimization/46663
+	* tree-vect-patterns.c (vect_recog_pow_pattern): Check that
+	FUNCTION_DECL exists and that it's a builtin.
+
 2010-12-07  Jakub Jelinek  <jakub@redhat.com>
 
 	PR middle-end/46534
--- gcc-4_4-branch/gcc/testsuite/ChangeLog	2010/12/05 10:09:25	167471
+++ gcc-4_4-branch/gcc/testsuite/ChangeLog	2010/12/05 11:31:09	167472
@@ -1,3 +1,9 @@
+2010-12-05  Richard Guenther  <rguenther@suse.de>
+	    Ira Rosen  <irar@il.ibm.com>
+
+	PR tree-optimization/46663
+	* gcc.dg/vect/pr46663.c: New test.
+
 2010-12-07  Jakub Jelinek  <jakub@redhat.com>
 
 	PR c++/46538
--- /dev/null
+++ gcc-4_4-branch/gcc/testsuite/gcc.dg/vect/pr46663.c	2010/12/05 08:27:42	167470
@@ -0,0 +1,14 @@
+/* { dg-do compile } */
+/* { dg-options "-O -ftree-vectorize -fdump-tree-vect-details -fexceptions" } */
+
+typedef __attribute__ ((const)) int (*bart) (void);
+
+int foo (bart bar, int m)
+{
+  int i, j = 0;
+  for (i = 0; i < m; i++)
+    j += bar();
+  return j;
+}
+
+/* { dg-final { cleanup-tree-dump "vect" } } */
--- gcc-4_4-branch/gcc/tree-vect-patterns.c	2010/12/05 10:09:25	167471
+++ gcc-4_4-branch/gcc/tree-vect-patterns.c	2010/12/05 11:31:09	167472
@@ -475,6 +475,9 @@
   type = gimple_expr_type (last_stmt);
 
   fn = gimple_call_fndecl (last_stmt);
+  if (fn == NULL_TREE || DECL_BUILT_IN_CLASS (fn) != BUILT_IN_NORMAL)
+    return NULL;
+
   switch (DECL_FUNCTION_CODE (fn))
     {
     case BUILT_IN_POWIF:
