[4.5,4.6,4.7 Regression] Stage1 bootstrap fails with gcc-4.6.3: Infinite loop in pointer_set_insert

 http://gcc.gnu.org/bugzilla/show_bug.cgi?id=52894

--- gcc-4_6-branch/gcc/ChangeLog	2012/04/10 22:11:38	186296
+++ gcc-4_6-branch/gcc/ChangeLog	2012/04/10 22:13:52	186297
@@ -1,6 +1,14 @@
 	benefit speed path.
 	(execute_pre): Use flag_tree_partial_pre.
 
+2012-04-10  John David Anglin  <dave.anglin@nrc-cnrc.gc.ca>
+
+	PR middle-end/52894
+	* varasm.c (process_pending_assemble_externals): Set
+	pending_assemble_externals_processed true.
+	(assemble_external): Call assemble_external_real if the pending
+	assemble externals have been processed.
+
 2012-03-28  Martin Jambor  <mjambor@suse.cz>
 
 	Backported from mainline
--- gcc-4_6-branch/gcc/varasm.c	2012/04/10 22:11:38	186296
+++ gcc-4_6-branch/gcc/varasm.c	2012/04/10 22:13:52	186297
@@ -2106,6 +2106,11 @@
    the entire pending_assemble_externals list.  See assemble_external().  */
 static struct pointer_set_t *pending_assemble_externals_set;
 
+/* Some targets delay some output to final using TARGET_ASM_FILE_END.
+   As a result, assemble_external can be called after the list of externals
+   is processed and the pointer set destroyed.  */
+static bool pending_assemble_externals_processed;
+
 #ifdef ASM_OUTPUT_EXTERNAL
 /* True if DECL is a function decl for which no out-of-line copy exists.
    It is assumed that DECL's assembler name has been set.  */
@@ -2155,6 +2160,7 @@
     assemble_external_real (TREE_VALUE (list));
 
   pending_assemble_externals = 0;
+  pending_assemble_externals_processed = true;
   pointer_set_destroy (pending_assemble_externals_set);
 #endif
 }
@@ -2196,6 +2202,12 @@
     weak_decls = tree_cons (NULL, decl, weak_decls);
 
 #ifdef ASM_OUTPUT_EXTERNAL
+  if (pending_assemble_externals_processed)
+    {
+      assemble_external_real (decl);
+      return;
+    }
+
   if (! pointer_set_insert (pending_assemble_externals_set, decl))
     pending_assemble_externals = tree_cons (NULL, decl,
 					    pending_assemble_externals);
