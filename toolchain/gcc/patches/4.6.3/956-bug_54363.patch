[4.6 Regression] ICE when compiling malformed struct initializers

 http://gcc.gnu.org/bugzilla/show_bug.cgi?id=54363

--- gcc-4_7-branch/gcc/ChangeLog	2012/09/03 15:39:15	190897
+++ gcc-4_7-branch/gcc/ChangeLog	2012/09/03 16:02:52	190898
@@ -1,3 +1,12 @@
+2012-09-03  Jakub Jelinek  <jakub@redhat.com>
+
+	Backported from mainline
+	2012-08-24  Jakub Jelinek  <jakub@redhat.com>
+
+	PR c/54363
+	* gimplify.c (optimize_compound_literals_in_ctor): Only recurse
+	if init is a CONSTRUCTOR.
+
 2012-09-02  Eric Botcazou  <ebotcazou@adacore.com>
 
 	PR rtl-optimization/54369
--- gcc-4_7-branch/gcc/gimplify.c	2012/09/03 15:39:15	190897
+++ gcc-4_7-branch/gcc/gimplify.c	2012/09/03 16:02:52	190898
@@ -3730,7 +3730,8 @@
 
 	  if (!TREE_ADDRESSABLE (value)
 	      && !TREE_ADDRESSABLE (decl)
-	      && init)
+	      && init
+	      && TREE_CODE (init) == CONSTRUCTOR)
 	    newval = optimize_compound_literals_in_ctor (init);
 	}
       if (newval == value)
--- gcc-4_7-branch/gcc/testsuite/ChangeLog	2012/09/03 15:39:15	190897
+++ gcc-4_7-branch/gcc/testsuite/ChangeLog	2012/09/03 16:02:52	190898
@@ -1,3 +1,11 @@
+2012-09-03  Jakub Jelinek  <jakub@redhat.com>
+
+	Backported from mainline
+	2012-08-24  Jakub Jelinek  <jakub@redhat.com>
+
+	PR c/54363
+	* gcc.dg/pr54363.c: New test.
+
 2012-08-10  Ulrich Weigand  <ulrich.weigand@linaro.org>
 
 	Backport from mainline
--- /dev/null
+++ gcc-4_7-branch/gcc/testsuite/gcc.dg/pr54363.c	2012/09/03 16:02:52	190898
@@ -0,0 +1,12 @@
+/* PR c/54363 */
+/* { dg-do compile } */
+/* { dg-options "-std=gnu99" } */
+
+struct S { char **a; };
+
+void
+test (void)
+{
+  struct S b = { .a = (char **) { "a", "b" } }; /* { dg-warning "(initialization|excess elements)" } */
+  struct S c = { .a = (char *[]) { "a", "b" } };
+}
