[4.4/4.5/4.6/4.7 Regression] Virtual inheritance segfault

 http://gcc.gnu.org/bugzilla/show_bug.cgi?id=50618

--- gcc-4_4-branch/gcc/cp/ChangeLog	2011/10/13 18:02:53	179937
+++ gcc-4_4-branch/gcc/cp/ChangeLog	2011/10/13 18:03:06	179938
@@ -1,3 +1,9 @@
+2011-10-13  Jason Merrill  <jason@redhat.com>
+
+	PR c++/50618
+	* init.c (expand_aggr_init_1): Don't zero-initialize virtual
+	bases of a base subobject.
+
 2011-05-20  Jason Merrill  <jason@redhat.com>
 
 	PR c++/48873
--- gcc-4_4-branch/gcc/cp/init.c	2011/10/13 18:02:53	179937
+++ gcc-4_4-branch/gcc/cp/init.c	2011/10/13 18:03:06	179938
@@ -1443,7 +1443,12 @@
 	 zero out the object first.  */
       else if (TYPE_NEEDS_CONSTRUCTING (type))
 	{
-	  init = build_zero_init (type, NULL_TREE, /*static_storage_p=*/false);
+	  tree field_size = NULL_TREE;
+	  if (exp != true_exp && CLASSTYPE_AS_BASE (type) != type)
+	    /* Don't clobber already initialized virtual bases.  */
+	    field_size = TYPE_SIZE (CLASSTYPE_AS_BASE (type));
+	  init = build_zero_init_1 (type, NULL_TREE, /*static_storage_p=*/false,
+				    field_size);
 	  init = build2 (INIT_EXPR, type, exp, init);
 	  finish_expr_stmt (init);
 	  /* And then call the constructor.  */
--- gcc-4_4-branch/gcc/testsuite/ChangeLog	2011/10/13 18:02:53	179937
+++ gcc-4_4-branch/gcc/testsuite/ChangeLog	2011/10/13 18:03:06	179938
@@ -1,3 +1,8 @@
+2011-10-13  Jason Merrill  <jason@redhat.com>
+
+	PR c++/50618
+	* g++.dg/init/vbase1.C: New.
+
 2011-07-19  Jakub Jelinek  <jakub@redhat.com>
 
 	Backport from mainline
--- /dev/null
+++ gcc-4_4-branch/gcc/testsuite/g++.dg/init/vbase1.C	2011/10/13 18:03:06	179938
@@ -0,0 +1,39 @@
+// PR c++/50618
+// { dg-do run }
+
+struct Base
+{
+    const int text;
+    Base():text(1) {}
+    Base(int aText)
+    : text(aText) {}
+};
+struct SubA : public virtual Base
+{
+protected:
+  int x;
+public:
+  SubA(int aX)
+  : x(aX) {}
+};
+class SubB : public virtual Base
+{};
+struct Diamond : public SubA, public SubB
+{
+    Diamond(int text)
+    : Base(text), SubA(5), SubB() {}
+
+    void printText()
+    {
+        if(text != 2)
+          __builtin_abort();
+        if(x!=5)
+          __builtin_abort();
+    }
+};
+
+int main(int, char**)
+{
+    Diamond x(2);
+    x.printText();
+}
-- 
