Wrong constant folding

 http://gcc.gnu.org/bugzilla/show_bug.cgi?id=57829

--- gcc-4_7-branch/gcc/ChangeLog	2013/07/08 08:17:14	200772
+++ gcc-4_7-branch/gcc/ChangeLog	2013/07/08 08:17:35	200773
@@ -1,3 +1,9 @@
+2013-07-08  Jakub Jelinek  <jakub@redhat.com>
+
+	PR rtl-optimization/57829
+	* simplify-rtx.c (simplify_binary_operation_1) <case IOR>: Ensure that
+	mask bits outside of mode are just sign-extension from mode to HWI.
+
 2013-04-12  Release Manager
 
 	* GCC 4.6.4 released.
--- gcc-4_7-branch/gcc/simplify-rtx.c	2013/07/08 08:17:14	200772
+++ gcc-4_7-branch/gcc/simplify-rtx.c	2013/07/08 08:17:35	200773
@@ -2558,6 +2558,7 @@
           HOST_WIDE_INT mask = INTVAL (trueop1) << count;
 
           if (mask >> count == INTVAL (trueop1)
+	      && trunc_int_for_mode (mask, mode) == mask
               && (mask & nonzero_bits (XEXP (op0, 0), mode)) == 0)
 	    return simplify_gen_binary (ASHIFTRT, mode,
 					plus_constant (XEXP (op0, 0), mask),
--- /dev/null
+++ gcc-4_7-branch/gcc/testsuite/gcc.c-torture/execute/pr57829.c	2013/07/08 08:17:35	200773
@@ -0,0 +1,32 @@
+/* { dg-do run } */
+/* { dg-options "-O2" } */
+
+__attribute__((noinline, noclone))
+int
+f1 (int k)
+{
+  return 2 | ((k - 1) >> ((int) sizeof (int) * __CHAR_BIT__ - 1));
+}
+
+__attribute__((noinline, noclone))
+long int
+f2 (long int k)
+{
+  return 2L | ((k - 1L) >> ((int) sizeof (long int) * __CHAR_BIT__ - 1));
+}
+
+__attribute__((noinline, noclone))
+int
+f3 (int k)
+{
+  k &= 63;
+  return 4 | ((k + 2) >> 5);
+}
+
+int
+main ()
+{
+  if (f1 (1) != 2 || f2 (1L) != 2L || f3 (63) != 6 || f3 (1) != 4)
+    __builtin_abort ();
+  return 0;
+}
