[4.7 Regression] likely wrong code bug

 http://gcc.gnu.org/bugzilla/show_bug.cgi?id=58385

--- gcc-4_8-branch/gcc/ChangeLog	2013/09/11 11:35:51	202494
+++ gcc-4_8-branch/gcc/ChangeLog	2013/09/11 12:17:47	202495
@@ -1,3 +1,9 @@
+2013-09-11  Jakub Jelinek  <jakub@redhat.com>
+
+	PR tree-optimization/58385
+	* fold-const.c (build_range_check): If both low and high are NULL,
+	use omit_one_operand_loc to preserve exp side-effects.
+
 2013-09-03  Richard Biener  <rguenther@suse.de>
 
 	Backport from mainline
--- gcc-4_8-branch/gcc/fold-const.c	2013/09/11 11:35:51	202494
+++ gcc-4_8-branch/gcc/fold-const.c	2013/09/11 12:17:47	202495
@@ -4237,7 +4237,7 @@
     }
 
   if (low == 0 && high == 0)
-    return build_int_cst (type, 1);
+    return omit_one_operand_loc (loc, type, build_int_cst (type, 1), exp);
 
   if (low == 0)
     return fold_build2_loc (loc, LE_EXPR, type, exp,
--- /dev/null
+++ gcc-4_8-branch/gcc/testsuite/gcc.c-torture/execute/pr58385.c	2013/09/11 12:17:47	202495
@@ -0,0 +1,21 @@
+/* PR tree-optimization/58385 */
+
+extern void abort (void);
+
+int a, b = 1;
+
+int
+foo ()
+{
+  b = 0;
+  return 0;
+}
+
+int
+main ()
+{
+  ((0 || a) & foo () >= 0) <= 1 && 1;
+  if (b)
+    abort ();
+  return 0;
+}
