[4.7/4.8/4.9 Regression] pointer to member function inaccessible through using statement (or ICE)

 http://gcc.gnu.org/bugzilla/show_bug.cgi?id=57831

--- gcc-4_7-branch/gcc/cp/ChangeLog	2013/07/09 17:10:51	200828
+++ gcc-4_7-branch/gcc/cp/ChangeLog	2013/07/09 17:50:03	200829
@@ -1,3 +1,8 @@
+2013-07-09  Jason Merrill  <jason@redhat.com>
+
+	PR c++/57831
+	* pt.c (tsubst_copy): Handle USING_DECL.
+
 2013-04-12  Release Manager
 
 	* GCC 4.6.4 released.
--- gcc-4_7-branch/gcc/cp/pt.c	2013/07/09 17:10:51	200828
+++ gcc-4_7-branch/gcc/cp/pt.c	2013/07/09 17:50:03	200829
@@ -12214,6 +12214,9 @@
     case TYPE_DECL:
       return tsubst (t, args, complain, in_decl);
 
+    case USING_DECL:
+      t = DECL_NAME (t);
+      /* Fall through.  */
     case IDENTIFIER_NODE:
       if (IDENTIFIER_TYPENAME_P (t))
 	{
--- /dev/null
+++ gcc-4_7-branch/gcc/testsuite/g++.dg/template/using23.C	2013/07/09 17:50:03	200829
@@ -0,0 +1,15 @@
+// PR c++/57831
+
+struct A {
+  void f();
+};
+template <class T> struct B : T {
+  typedef T base;
+  using base::f;         // If I write "using B<T>::f" it's ok
+  void g( ) {
+    B<T>::f();           // This is OK as expected
+    (this->*&T::f)();    // This is also OK
+    (this->*&B<T>::f)(); // This causes error
+  }
+};
+template struct B< A >;
