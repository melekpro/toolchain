Bogus overload resolution for the assignment operator in assignment to a conditional

 http://gcc.gnu.org/bugzilla/show_bug.cgi?id=58714

--- gcc-4_8-branch/gcc/cp/ChangeLog	2014/08/07 19:49:21	213733
+++ gcc-4_8-branch/gcc/cp/ChangeLog	2014/08/07 19:50:04	213734
@@ -1,3 +1,8 @@
+2014-08-07  Jason Merrill  <jason@redhat.com>
+
+	PR c++/58714
+	* tree.c (stabilize_expr): A stabilized prvalue is an xvalue.
+
 2013-11-27  Tom de Vries  <tom@codesourcery.com>
 	    Marc Glisse  <marc.glisse@inria.fr>
 
--- gcc-4_8-branch/gcc/cp/tree.c	2014/08/07 19:49:21	213733
+++ gcc-4_8-branch/gcc/cp/tree.c	2014/08/07 19:50:04	213734
@@ -3180,6 +3180,10 @@
     {
       init_expr = get_target_expr (exp);
       exp = TARGET_EXPR_SLOT (init_expr);
+      if (CLASS_TYPE_P (TREE_TYPE (exp)))
+	exp = move (exp);
+      else
+	exp = rvalue (exp);
     }
   else
     {
--- /dev/null
+++ gcc-4_8-branch/gcc/testsuite/g++.dg/cpp0x/rv-cond1.C	2014/08/07 19:50:04	213734
@@ -0,0 +1,13 @@
+// PR c++/58714
+// { dg-do compile { target c++0x } }
+
+struct X {
+  X& operator=(const X&) = delete;
+  X& operator=(X&& ) = default;
+};
+
+void f(bool t) {
+  X a, b;
+  *(t ? &a : &b) = X();
+  (t ? a : b) = X();
+}
--- /dev/null
+++ gcc-4_8-branch/gcc/testsuite/g++.dg/expr/cond12.C	2014/08/07 19:50:04	213734
@@ -0,0 +1,12 @@
+// PR c++/58714
+// { dg-do run }
+
+struct X {
+    X& operator=(const X&){}
+    X& operator=(X&){__builtin_abort();}
+};
+
+int main(int argv,char**) {
+  X a, b;
+  ((argv > 2) ? a : b) = X();
+}
