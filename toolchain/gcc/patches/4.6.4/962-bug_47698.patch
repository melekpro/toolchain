CMOV accessing volatile memory with read side effect

 http://gcc.gnu.org/bugzilla/show_bug.cgi?id=47698

--- trunk/gcc/ChangeLog	2011/11/07 08:33:14	181074
+++ trunk/gcc/ChangeLog	2011/11/07 08:41:55	181075
@@ -1,6 +1,12 @@
 	* incpath.c (merge_include_chains): Call free_path on
 	heads[QUOTE] and tails[QUOTE].
 
+2011-11-07  Sergey Ostanevich  <sergos.gnu@gmail.com>
+
+	PR rtl-optimization/47698
+	* ifconv.c (noce_operand_ok): prevent CMOV generation
+	for volatile mem.
+
 2011-11-07  Alan Modra  <amodra@gmail.com>
 
 	PR target/30282
--- trunk/gcc/ifcvt.c	2011/11/07 08:33:14	181074
+++ trunk/gcc/ifcvt.c	2011/11/07 08:41:55	181075
@@ -2329,14 +2329,14 @@ noce_operand_ok (const_rtx op)
 static int
 noce_operand_ok (const_rtx op)
 {
-  /* We special-case memories, so handle any of them with
-     no address side effects.  */
-  if (MEM_P (op))
-    return ! side_effects_p (XEXP (op, 0));
-
   if (side_effects_p (op))
     return FALSE;
 
+  /* We special-case memories, so handle any of them with
+     no address side effects.  */
+  if (MEM_P (op))
+    return ! side_effects_p (XEXP (op, 0));
+
   return ! may_trap_p (op);
 }
 
