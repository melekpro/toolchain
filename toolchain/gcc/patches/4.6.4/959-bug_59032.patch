[4.6/4.7/4.8 Regression] ICE incrementing vector type

 http://gcc.gnu.org/bugzilla/show_bug.cgi?id=59032

--- gcc-4_8-branch/gcc/c-typeck.c	2013/12/02 08:37:09	205583
+++ gcc-4_8-branch/gcc/c-typeck.c	2013/12/02 08:37:23	205584
@@ -3629,7 +3629,8 @@
       /* Report invalid types.  */
 
       if (typecode != POINTER_TYPE && typecode != FIXED_POINT_TYPE
-	  && typecode != INTEGER_TYPE && typecode != REAL_TYPE)
+	  && typecode != INTEGER_TYPE && typecode != REAL_TYPE
+	  && typecode != VECTOR_TYPE)
 	{
 	  if (code == PREINCREMENT_EXPR || code == POSTINCREMENT_EXPR)
 	    error_at (location, "wrong type argument to increment");
@@ -3694,7 +3695,9 @@
 	  }
 	else
 	  {
-	    inc = integer_one_node;
+	    inc = (TREE_CODE (argtype) == VECTOR_TYPE
+		   ? build_one_cst (argtype)
+		   : integer_one_node);
 	    inc = convert (argtype, inc);
 	  }
 
--- gcc-4_8-branch/gcc/cp/ChangeLog	2013/12/02 08:37:09	205583
+++ gcc-4_8-branch/gcc/cp/ChangeLog	2013/12/02 08:37:23	205584
@@ -1,3 +1,9 @@
+2013-11-27  Tom de Vries  <tom@codesourcery.com>
+	    Marc Glisse  <marc.glisse@inria.fr>
+
+	PR c++/59032
+	* typeck.c (cp_build_unary_op): Allow vector increment and decrement.
+
 2013-07-09  Jason Merrill  <jason@redhat.com>
 
 	PR c++/57831
--- gcc-4_8-branch/gcc/cp/typeck.c	2013/12/02 08:37:09	205583
+++ gcc-4_8-branch/gcc/cp/typeck.c	2013/12/02 08:37:23	205584
@@ -5588,7 +5588,9 @@
 	    inc = cxx_sizeof_nowarn (TREE_TYPE (argtype));
 	  }
 	else
-	  inc = integer_one_node;
+	  inc = (TREE_CODE (argtype) == VECTOR_TYPE
+		 ? build_one_cst (argtype)
+		 : integer_one_node);
 
 	inc = cp_convert (argtype, inc);
 
--- /dev/null
+++ gcc-4_8-branch/gcc/testsuite/c-c++-common/pr59032.c	2013/12/02 08:37:23	205584
@@ -0,0 +1,30 @@
+/* { dg-do compile } */
+/* { dg-options "-O2" } */
+
+void
+foo()
+{
+  float v __attribute__((vector_size(8)));
+  v++;
+}
+
+void
+foo2 ()
+{
+  float v __attribute__((vector_size(8)));
+  ++v;
+}
+
+void
+foo3 ()
+{
+  float v __attribute__((vector_size(8)));
+  v--;
+}
+
+void
+foo4 ()
+{
+  float v __attribute__((vector_size(8)));
+  --v;
+}
