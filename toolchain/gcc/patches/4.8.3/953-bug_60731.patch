[4.7/4.8/4.9 Regression] dynamic library not getting reinitialized on multiple calls to dlopen()

 http://gcc.gnu.org/bugzilla/show_bug.cgi?id=60731

--- gcc-4_8-branch/gcc/doc/invoke.texi	(revision 211647)
+++ gcc-4_8-branch/gcc/doc/invoke.texi	(revision 211648)
@@ -1009,6 +1009,7 @@ See S/390 and zSeries Options.
 -ffixed-@var{reg}  -fexceptions @gol
 -fnon-call-exceptions  -fdelete-dead-exceptions  -funwind-tables @gol
 -fasynchronous-unwind-tables @gol
+-fno-gnu-unique @gol
 -finhibit-size-directive  -finstrument-functions @gol
 -finstrument-functions-exclude-function-list=@var{sym},@var{sym},@dots{} @gol
 -finstrument-functions-exclude-file-list=@var{file},@var{file},@dots{} @gol
@@ -20357,6 +20358,20 @@ Generate unwind table in DWARF 2 format, if suppor
 table is exact at each instruction boundary, so it can be used for stack
 unwinding from asynchronous events (such as debugger or garbage collector).
 
+@item -fno-gnu-unique
+@opindex fno-gnu-unique
+On systems with recent GNU assembler and C library, the C++ compiler
+uses the @code{STB_GNU_UNIQUE} binding to make sure that definitions
+of template static data members and static local variables in inline
+functions are unique even in the presence of @code{RTLD_LOCAL}; this
+is necessary to avoid problems with a library used by two different
+@code{RTLD_LOCAL} plugins depending on a definition in one of them and
+therefore disagreeing with the other one about the binding of the
+symbol.  But this causes @code{dlclose} to be ignored for affected
+DSOs; if your program relies on reinitialization of a DSO via
+@code{dlclose} and @code{dlopen}, you can use
+@option{-fno-gnu-unique}.
+
 @item -fpcc-struct-return
 @opindex fpcc-struct-return
 Return ``short'' @code{struct} and @code{union} values in memory like
--- gcc-4_8-branch/gcc/ChangeLog	(revision 211647)
+++ gcc-4_8-branch/gcc/ChangeLog	(revision 211648)
@@ -1,6 +1,12 @@
 	* config/arm/arm.c (arm_output_mi_thunk): Fix offset for
 	TARGET_THUMB1_ONLY. Add comments.
 
+2014-06-13  Jason Merrill  <jason@redhat.com>
+
+	PR c++/60731
+	* common.opt (-fno-gnu-unique): Add.
+	* config/elfos.h (USE_GNU_UNIQUE_OBJECT): Check it.
+
 2014-06-05  Martin Jambor  <mjambor@suse.cz>
 
 	PR ipa/61393
--- gcc-4_8-branch/gcc/common.opt	(revision 211647)
+++ gcc-4_8-branch/gcc/common.opt	(revision 211648)
@@ -1226,6 +1226,10 @@ fgnu-tm
 Common Report Var(flag_tm)
 Enable support for GNU transactional memory
 
+fgnu-unique
+Common Report Var(flag_gnu_unique) Init(1)
+Use STB_GNU_UNIQUE if supported by the assembler
+
 floop-flatten
 Common Ignore
 Does nothing. Preserved for backward compatibility.
--- gcc-4_8-branch/gcc/config/elfos.h	(revision 211647)
+++ gcc-4_8-branch/gcc/config/elfos.h	(revision 211648)
@@ -287,7 +287,7 @@ see the files COPYING3 and COPYING.RUNTIME respect
 /* Write the extra assembler code needed to declare an object properly.  */
 
 #ifdef HAVE_GAS_GNU_UNIQUE_OBJECT
-#define USE_GNU_UNIQUE_OBJECT 1
+#define USE_GNU_UNIQUE_OBJECT flag_gnu_unique
 #else
 #define USE_GNU_UNIQUE_OBJECT 0
 #endif
