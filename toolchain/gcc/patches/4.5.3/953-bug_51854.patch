[4.4/4.5/4.6 Regression] ICE in mangle.c with literal of complex floating type

 http://gcc.gnu.org/bugzilla/show_bug.cgi?id=51854

--- gcc-4_6-branch/gcc/testsuite/ChangeLog	(revision 183223)
+++ gcc-4_6-branch/gcc/testsuite/ChangeLog	(revision 183224)
@@ -11,6 +11,11 @@
 	PR rtl-optimization/52139
 	* gcc.dg/pr52139.c: New test.
 
+2012-01-16  Jason Merrill  <jason@redhat.com>
+
+	PR c++/51854
+	* g++.dg/abi/mangle60.C: New.
+
 2012-01-03  Richard Guenther  <rguenther@suse.de>
 
 	Backport from mainline
--- gcc-4_6-branch/gcc/testsuite/g++.dg/abi/mangle60.C	(revision 0)
+++ gcc-4_6-branch/gcc/testsuite/g++.dg/abi/mangle60.C	(revision 183224)
@@ -0,0 +1,21 @@
+// PR c++/51854
+// { dg-options "" }
+// { dg-excess-errors "" { xfail *-*-* } }
+
+template <unsigned N> struct A;
+
+template <typename U, typename V>
+char foo(U, V);
+
+// { dg-final { scan-assembler "_Z3barIiEvP1AIXszcl3foocvT__ELCi0_42EEEE" } }
+template <typename U>
+void bar(A<sizeof(foo(U(), 42i))> *);
+
+// { dg-final { scan-assembler "_Z3bazIiEvP1AIXszcl3foocvT__ELCf00000000_00000000EEEE" } }
+template <typename U>
+void baz(A<sizeof(foo(U(), 0.0fj))> *);
+
+int main() {
+   bar<int>(0);
+   baz<int>(0);
+}
--- gcc-4_6-branch/gcc/cp/ChangeLog	(revision 183223)
+++ gcc-4_6-branch/gcc/cp/ChangeLog	(revision 183224)
@@ -1,6 +1,11 @@
 	* pt.c (tsubst_initializer_list): A pack expansion with no elements
 	means value-initialization.
 
+2012-01-16  Jakub Jelinek  <jakub@redhat.com>
+
+	PR c++/51854
+	* mangle.c (write_template_arg_literal): Sorry instead of aborting.
+
 2011-12-20  Dodji Seketeli  <dodji@redhat.com>
 
 	PR debug/49951
--- gcc-4_6-branch/gcc/cp/mangle.c	(revision 183223)
+++ gcc-4_6-branch/gcc/cp/mangle.c	(revision 183224)
@@ -2770,7 +2770,8 @@
       break;
 
     default:
-      gcc_unreachable ();
+      sorry ("mangling %C", TREE_CODE (value));
+      break;
     }
 
   write_char ('E');
