gethostbyname* can't process 30 hostnames in DNS answer,
which can fit in standard 512 bytes UDP packet.
Returned code was ERANGE ("buffer too small for all addresses").

Also save nearly 0.5 static buffer in case of IPv6 turned on.

--- uClibc-0.9.30.1/libc/inet/resolv.c	2008-11-02 03:25:33.000000000 +0300
+++ uClibc/libc/inet/resolv.c	2009-11-04 22:11:26.000000000 +0300
@@ -1205,15 +1205,7 @@ void attribute_hidden __close_nameserver
 
 struct hostent *gethostbyname(const char *name)
 {
-	static struct hostent h;
-	static char buf[sizeof(struct in_addr) +
-			sizeof(struct in_addr *)*2 +
-			sizeof(char *)*ALIAS_DIM + 384/*namebuffer*/ + 32/* margin */];
-	struct hostent *hp;
-
-	gethostbyname_r(name, &h, buf, sizeof(buf), &hp, &h_errno);
-
-	return hp;
+	return gethostbyname2(name, AF_INET);
 }
 libc_hidden_def(gethostbyname)
 #endif
@@ -1222,19 +1214,26 @@ libc_hidden_def(gethostbyname)
 
 struct hostent *gethostbyname2(const char *name, int family)
 {
+	static struct hostent h;
+	struct hostent *hp;
+
 #ifndef __UCLIBC_HAS_IPV6__
-	return family == AF_INET ? gethostbyname(name) : (struct hostent*)0;
+	static char buf[sizeof(struct in_addr) +
+			sizeof(struct in_addr *)*2 +
+			sizeof(char *)*ALIAS_DIM + 456/*namebuffer*/ + 32/* margin */];
+
+	if (family != AF_INET)
+		return (struct hostent*)0;
+	gethostbyname_r(name, &h, buf, sizeof(buf), &hp, &h_errno);
 #else /* __UCLIBC_HAS_IPV6__ */
-	static struct hostent h;
 	static char buf[sizeof(struct in6_addr) +
 			sizeof(struct in6_addr *)*2 +
-			sizeof(char *)*ALIAS_DIM + 384/*namebuffer*/ + 32/* margin */];
-	struct hostent *hp;
+			sizeof(char *)*ALIAS_DIM + 456/*namebuffer*/ + 32/* margin */];
 
 	gethostbyname2_r(name, family, &h, buf, sizeof(buf), &hp, &h_errno);
+#endif /* __UCLIBC_HAS_IPV6__ */
 
 	return hp;
-#endif /* __UCLIBC_HAS_IPV6__ */
 }
 #endif
 
@@ -1575,7 +1574,7 @@ struct hostent *gethostbyaddr (const voi
 #else
 			sizeof(struct in6_addr) + sizeof(struct in6_addr *)*2 +
 #endif /* __UCLIBC_HAS_IPV6__ */
-			sizeof(char *)*ALIAS_DIM + 384 /*namebuffer*/ + 32 /* margin */];
+			sizeof(char *)*ALIAS_DIM + 456/*namebuffer*/ + 32/* margin */];
 	struct hostent *hp;
 
 	gethostbyaddr_r(addr, len, type, &h, buf, sizeof(buf), &hp, &h_errno);
