test: Allow to build separate shared libraries for glibc-based tests

It need to avoid standard libraries mix(glibc & uClibc).
e.g. when glibc executable tries to load shared library(.so) linked
against uClibc.

_SO_EXT1 macro(shared library suffix) defined for use in common
application code.

To use it, you should add to Makefile.in line like:

 tst-test1_glibc: libtest1.so.glibc

and replace all occurences of "libtest1.so" in code with "libtest1.so"_SO_EXT1


Signed-off-by: Leonid Lisovskiy <lly.dev@gmail.com>

diff --git a/test/Rules.mak b/test/Rules.mak
--- a/test/Rules.mak
+++ b/test/Rules.mak
@@ -100,6 +100,9 @@ endif
 
 ifneq ($(HAVE_SHARED),y)
 	LDFLAGS       += -Wl,-static -static-libgcc
+else
+	CFLAGS        += -D_SO_EXT1=\"\"
+	HOST_CFLAGS   += -D_SO_EXT1=\".glibc\"
 endif
 
 ifndef TEST_INSTALLED_UCLIBC
diff --git a/test/Test.mak b/test/Test.mak
--- a/test/Test.mak
+++ b/test/Test.mak
@@ -127,7 +127,8 @@ $(G_TARGETS): $(U_TARGET_SRCS) $(MAKE_SRCS)
 	$(CFLAGS_$(notdir $(CURDIR))) $(CFLAGS_$(patsubst %_glibc,%,$@)) \
 	-c $(patsubst %_glibc,%,$@).c -o $@.o
 	$(Q)$(HOSTCC) $(filter-out $(LDFLAGS-OMIT-$(patsubst %_glibc,%,$@)),$(HOST_LDFLAGS)) \
-	$@.o -o $@ $(EXTRA_LDFLAGS) $(LDFLAGS_$(patsubst %_glibc,%,$@)) $(LDFLAGS_$@)
+	$@.o -o $@ $(EXTRA_LDFLAGS) \
+	$(patsubst %.so,%.so.glibc,$(LDFLAGS_$(patsubst %_glibc,%,$@))) $(LDFLAGS_$@)
 
 
 shell_%:
@@ -141,14 +142,23 @@ shell_%:
 	$(showlink)
 	$(Q)$(CC) \
 		$(filter-out $(CFLAGS-OMIT-$<),$(CFLAGS)) $(EXTRA_CFLAGS) \
-		$(CFLAGS_$(patsubst %_glibc,%,$@)) \
+		$(CFLAGS_$@) \
 		-fPIC -shared $< -o $@ -Wl,-soname,$@ \
-		$(filter-out $(LDFLAGS-OMIT-$<),$(LDFLAGS)) $(EXTRA_LIBS) \
-		$(LDFLAGS_$(patsubst %_glibc,%,$@))
+		$(filter-out $(LDFLAGS-OMIT-$@),$(LDFLAGS)) $(EXTRA_LIBS) \
+		$(LDFLAGS_$@)
+
+%.so.glibc: %.c
+	$(showlink)
+	$(Q)$(HOSTCC) \
+		$(filter-out $(CFLAGS-OMIT-$<),$(HOST_CFLAGS)) \
+		$(CFLAGS_$(patsubst %.glibc,%,$@)) \
+		-fPIC -shared $< -o $@ -Wl,-soname,$@ \
+		$(filter-out $(LDFLAGS-OMIT-$(patsubst %.glibc,%,$@)),$(HOST_LDFLAGS)) $(EXTRA_LIBS) \
+		$(patsubst %.so,%.so.glibc,$(LDFLAGS_$(patsubst %.glibc,%,$@)))
 
 clean:
 	$(showclean)
-	$(Q)$(RM) *.a *.o *.so *~ core *.out *.gdb $(CLEAN_TARGETS) $(EXTRA_CLEAN)
+	$(Q)$(RM) *.a *.o *.so *.so.glibc *~ core *.out *.gdb $(CLEAN_TARGETS) $(EXTRA_CLEAN)
 	$(Q)$(RM_R) $(EXTRA_DIRS)
 
 .PHONY: all check clean test run compile
-- 
