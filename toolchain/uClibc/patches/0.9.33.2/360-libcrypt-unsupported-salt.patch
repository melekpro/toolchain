From 78b154a95b507c205241dd883396952e0dfbede7
From: Bernhard Reutner-Fischer <rep.dot.nop@gmail.com>
Date: Mon, 19 Jan 2015 16:24:19 +0000
Subject: libcrypt: return NULL on unsupported salt

BZ #7808 asks us not to fallback to DES if the optional SHA are disabled
but requested by the user.

Signed-off-by: Bernhard Reutner-Fischer <rep.dot.nop@gmail.com>
---

diff --git a/libcrypt/crypt.c b/libcrypt/crypt.c
--- a/libcrypt/crypt.c
+++ b/libcrypt/crypt.c
@@ -14,17 +14,21 @@ char *crypt(const char *key, const char *salt)
 	const unsigned char *ukey = (const unsigned char *)key;
 	const unsigned char *usalt = (const unsigned char *)salt;
 
-	if (salt[0] == '$' && salt[2] == '$') {
-		if (*++salt == '1')
-			return __md5_crypt(ukey, usalt);
+	if (salt[0] == '$') {
+		if (salt[1] && salt[2] == '$') { /* no blowfish '2X' here ATM */
+			if (*++salt == '1')
+				return __md5_crypt(ukey, usalt);
 #ifdef __UCLIBC_HAS_SHA256_CRYPT_IMPL__
-		else if (*salt == '5')
-			return __sha256_crypt(ukey, usalt);
+			else if (*salt == '5')
+				return __sha256_crypt(ukey, usalt);
 #endif
 #ifdef __UCLIBC_HAS_SHA512_CRYPT_IMPL__
-		else if (*salt == '6')
-			return __sha512_crypt(ukey, usalt);
+			else if (*salt == '6')
+				return __sha512_crypt(ukey, usalt);
 #endif
+		}
+		/* __set_errno(EINVAL);*/ /* ENOSYS might be misleading */
+		return NULL;
 	}
 	return __des_crypt(ukey, usalt);
 }
--
cgit v0.9.1
