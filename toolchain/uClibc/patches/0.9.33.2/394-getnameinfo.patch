From: Waldemar Brodkorb <wbx@openadk.org>
Date: Fri, 30 Dec 2016 12:19:59 +0100
Subject: inet: fix getnameinfo problem found by new test cases

Sync with GNU libc behaviour.

uClibc-ng commits
 d9f20698ed resolv.c: shrink code a bit in getnameinfo.
 892932d9e2 inet: fix getnameinfo problem found by new test cases
 32b8713ef1 add getnameinfo tests from GNU libc

---
 libc/inet/resolv.c     |   13 +++++++------
 test/inet/tst-getni1.c |   36 ++++++++++++++++++++++++++++++++++++
 test/inet/tst-getni2.c |   41 +++++++++++++++++++++++++++++++++++++++++
 3 files changed, 84 insertions(+), 6 deletions(-)
 create mode 100644 test/inet/tst-getni1.c
 create mode 100644 test/inet/tst-getni2.c

diff --git a/libc/inet/resolv.c b/libc/inet/resolv.c
--- a/libc/inet/resolv.c
+++ b/libc/inet/resolv.c
@@ -1775,7 +1775,7 @@ int getnameinfo(const struct sockaddr *sa,
 		unsigned flags)
 {
 	int serrno = errno;
-	unsigned ok;
+	bool ok = 0;
 	struct hostent *hoste = NULL;
 	char domain[256];
 
@@ -1785,16 +1785,18 @@ int getnameinfo(const struct sockaddr *sa,
 	if (sa == NULL || addrlen < sizeof(sa_family_t))
 		return EAI_FAMILY;
 
-	ok = sa->sa_family;
-	if (ok == AF_LOCAL) /* valid */;
+	if ((flags & NI_NAMEREQD) && host == NULL && serv == NULL)
+		return EAI_NONAME;
+
+	if (sa->sa_family == AF_LOCAL) /* valid */;
 #ifdef __UCLIBC_HAS_IPV4__
-	else if (ok == AF_INET) {
+	else if (sa->sa_family == AF_INET) {
 		if (addrlen < sizeof(struct sockaddr_in))
 			return EAI_FAMILY;
 	}
 #endif
 #ifdef __UCLIBC_HAS_IPV6__
-	else if (ok == AF_INET6) {
+	else if (sa->sa_family == AF_INET6) {
 		if (addrlen < sizeof(struct sockaddr_in6))
 			return EAI_FAMILY;
 	}
@@ -1802,7 +1804,6 @@ int getnameinfo(const struct sockaddr *sa,
 	else
 		return EAI_FAMILY;
 
-	ok = 0;
 	if (host != NULL && hostlen > 0)
 		switch (sa->sa_family) {
 		case AF_INET:
diff --git a/test/inet/tst-getni1.c b/test/inet/tst-getni1.c
new file mode 100644
--- /dev/null
+++ b/test/inet/tst-getni1.c
@@ -0,0 +1,36 @@
+#include <netdb.h>
+#include <stdio.h>
+#include <sys/socket.h>
+
+static int
+do_test (void)
+{
+  int retval = 0;
+
+  struct sockaddr_in s;
+  s.sin_family = AF_INET;
+  s.sin_port = 80;
+  s.sin_addr.s_addr = INADDR_LOOPBACK;
+  int r = getnameinfo((struct sockaddr *) &s, sizeof (s), NULL, 0, NULL, 0,
+		      NI_NUMERICHOST | NI_NUMERICSERV);
+  printf("r = %d\n", r);
+  if (r != 0)
+    {
+      puts ("failed without NI_NAMEREQD");
+      retval = 1;
+    }
+
+  r = getnameinfo((struct sockaddr *) &s, sizeof (s), NULL, 0, NULL, 0,
+		  NI_NUMERICHOST | NI_NUMERICSERV | NI_NAMEREQD);
+  printf("r = %d\n", r);
+  if (r != EAI_NONAME)
+    {
+      puts ("did not fail with EAI_NONAME with NI_NAMEREQD set");
+      retval = 1;
+    }
+
+  return retval;
+}
+
+#define TEST_FUNCTION do_test ()
+#include "../test-skeleton.c"
diff --git a/test/inet/tst-getni2.c b/test/inet/tst-getni2.c
new file mode 100644
--- /dev/null
+++ b/test/inet/tst-getni2.c
@@ -0,0 +1,41 @@
+#include <netdb.h>
+#include <stdio.h>
+#include <sys/socket.h>
+
+static int
+do_test (void)
+{
+  int retval = 0;
+
+  struct sockaddr_in6 s;
+  s.sin6_family = AF_INET6;
+  s.sin6_port = htons (80);
+  s.sin6_flowinfo = 0;
+  s.sin6_addr = (struct in6_addr) IN6ADDR_ANY_INIT;
+  s.sin6_scope_id = 0;
+  char buf[1000];
+  buf[0] = '\0';
+  int r = getnameinfo((struct sockaddr *) &s, sizeof (s), buf, sizeof (buf),
+		      NULL, 0, NI_NUMERICSERV);
+  printf("r = %d, buf = \"%s\"\n", r, buf);
+  if (r != 0)
+    {
+      puts ("failed without NI_NAMEREQD");
+      retval = 1;
+    }
+
+  buf[0] = '\0';
+  r = getnameinfo((struct sockaddr *) &s, sizeof (s), buf, sizeof (buf),
+		  NULL, 0, NI_NUMERICSERV | NI_NAMEREQD);
+  printf("r = %d, buf = \"%s\"\n", r, buf);
+  if (r != EAI_NONAME)
+    {
+      puts ("did not fail with EAI_NONAME with NI_NAMEREQD set");
+      retval = 1;
+    }
+
+  return retval;
+}
+
+#define TEST_FUNCTION do_test ()
+#include "../test-skeleton.c"
-- 
